source('Y:/Ruth Files/MPCEProjects/sens_spec_project/Code/analysis.R', echo=TRUE)
setwd("Y:/Ruth Files/MPCEProjects/sens_spec_project/Code")
require(ggplot2)
require(pROC)
col_names<-read.csv("../Data/data.csv",header=FALSE)
data<-read.csv("../Data/data.csv", skip = 4)
colnames(data)<-col_names[2,]
data[data == 0] <- NA
data<-data[1:799,1:5]
data_mod<-data
data_mod$monothermal_screen<-NA
selW<-which(data_mod$Order=="W")
selC<-which(data_mod$Order=="C")
data_mod$sum_lefts<-data_mod$WL+data_mod$CL
data_mod$sum_rights<-data_mod$WR+data_mod$CR
data_mod$sum_warms<-data_mod$WL+data_mod$WR
data_mod$sum_cools<-data_mod$CL+data_mod$CR
data_mod$diff_warms<-data_mod$WR-data_mod$WL
data_mod$diff_cools<-data_mod$CR-data_mod$CL
data_mod$sum_all<-data_mod$CL+data_mod$CR+data_mod$WL+data_mod$WR
data_mod$canal_paresis<-((data_mod$sum_rights-data_mod$sum_lefts)/data_mod$sum_all)*100
data_mod$WRandCL<-data_mod$WR+data_mod$CL
data_mod$WLandCR<-data_mod$WL+data_mod$CR
data_mod$directional_proponderance<-((data_mod$WRandCL-data_mod$WLandCR)/data_mod$sum_all)*100
data_mod[selW,"monothermal_screen"]<-(data_mod[selW,"diff_warms"]/data_mod[selW,"sum_warms"])*100
data_mod[selC,"monothermal_screen"]<-(data_mod[selC,"diff_cools"]/data_mod[selC,"sum_cools"])*100
data_mod$CP_significance<-abs(data_mod$canal_paresis)>20
data_mod$DP_significance<-abs(data_mod$directional_proponderance)>20
data_mod$overall_significance<-data_mod$CP_significance | data_mod$DP_significance
data_mod$rating<-NA
data_mod$mono_significance<-NA
get_spec_sens<-function(data_mod,significance){
data_mod$mono_significance<-abs(data_mod$monothermal_screen)>significance
data_mod[which(data_mod$overall_significance&data_mod$mono_significance),"rating"]<-"TP"
data_mod[which(!data_mod$overall_significance&data_mod$mono_significance),"rating"]<-"FP"
data_mod[which(data_mod$overall_significance&!data_mod$mono_significance),"rating"]<-"FN"
data_mod[which(!data_mod$overall_significance&!data_mod$mono_significance),"rating"]<-"TN"
sensitivity<-sum(data_mod$rating=="TP",na.rm = T)/(sum(data_mod$rating=="TP",na.rm = T)+sum(data_mod$rating=="FN",na.rm = T))
specificity<-sum(data_mod$rating=="TN",na.rm = T)/(sum(data_mod$rating=="TN",na.rm = T)+sum(data_mod$rating=="FP",na.rm = T))
return(c(sensitivity,specificity))
}
min_sig=0
max_sig=100
sig_range=seq(from=min_sig,to=max_sig,length.out=100)
sig_range=round(sig_range, 0)
sens_spec_dataset<-data.frame(matrix(nrow=(length(sig_range)),ncol=3))
sens_spec_dataset[,1]<-sig_range
colnames(sens_spec_dataset)=c("significance","sensitivity","specificity")
for (i in 1:length(sig_range)){
res<-get_spec_sens(data_mod,sig_range[i])
sens_spec_dataset[i,2]<-res[1]
sens_spec_dataset[i,3]<-res[2]
}
sens_spec_dataset$false_pos_rate<- 1 - sens_spec_dataset$specificity
g<-ggplot(data=sens_spec_dataset,aes(false_pos_rate,sensitivity))+
geom_text(label=sens_spec_dataset$significance,nudge_x = 0.05, nudge_y = 0.05, check_overlap = T)+
geom_point()+theme_bw()+ylab("True Positive Rate (specificity)")+xlab("False Positive Rate (1-sensitivity)")
g
data_mod$overall_significance<-data_mod$overall_significance*1
roc(response=data_mod$overall_significance,predictor=data_mod$monothermal_screen,na.rm=TRUE)
#I think this plot tells us that using the value of the monothermic screening is a bad idea!!!
plot.roc(data_mod$overall_significance,data_mod$monothermal_screen,na.rm=TRUE)
roc_obj <- roc(response = data_mod$overall_significance * 1, predictor = data_mod$monothermal_screen  )
auc(roc_obj)
require(ggplot2)
require(pROC)
col_names<-read.csv("../Data/data.csv",header=FALSE)
data<-read.csv("../Data/data.csv", skip = 4)
colnames(data)<-col_names[2,]
data[data == 0] <- NA
data<-data[1:799,1:5]
data_mod<-data
data_mod$monothermal_screen<-NA
selW<-which(data_mod$Order=="W")
selC<-which(data_mod$Order=="C")
data_mod$sum_lefts<-data_mod$WL+data_mod$CL
data_mod$sum_rights<-data_mod$WR+data_mod$CR
data_mod$sum_warms<-data_mod$WL+data_mod$WR
data_mod$sum_cools<-data_mod$CL+data_mod$CR
data_mod$diff_warms<-data_mod$WR-data_mod$WL
data_mod$diff_cools<-data_mod$CR-data_mod$CL
data_mod$sum_all<-data_mod$CL+data_mod$CR+data_mod$WL+data_mod$WR
data_mod$canal_paresis<-((data_mod$sum_rights-data_mod$sum_lefts)/data_mod$sum_all)*100
data_mod$WRandCL<-data_mod$WR+data_mod$CL
data_mod$WLandCR<-data_mod$WL+data_mod$CR
data_mod$directional_proponderance<-((data_mod$WRandCL-data_mod$WLandCR)/data_mod$sum_all)*100
data_mod[selW,"monothermal_screen"]<-(data_mod[selW,"diff_warms"]/data_mod[selW,"sum_warms"])*100
data_mod[selC,"monothermal_screen"]<-(data_mod[selC,"diff_cools"]/data_mod[selC,"sum_cools"])*100
data_mod$CP_significance<-abs(data_mod$canal_paresis)>20
data_mod$DP_significance<-abs(data_mod$directional_proponderance)>20
data_mod$overall_significance<-data_mod$CP_significance | data_mod$DP_significance
data_mod$rating<-NA
data_mod$mono_significance<-NA
get_spec_sens<-function(data_mod,significance){
data_mod$mono_significance<-abs(data_mod$monothermal_screen)>significance
data_mod[which(data_mod$overall_significance&data_mod$mono_significance),"rating"]<-"TP"
data_mod[which(!data_mod$overall_significance&data_mod$mono_significance),"rating"]<-"FP"
data_mod[which(data_mod$overall_significance&!data_mod$mono_significance),"rating"]<-"FN"
data_mod[which(!data_mod$overall_significance&!data_mod$mono_significance),"rating"]<-"TN"
sensitivity<-sum(data_mod$rating=="TP",na.rm = T)/(sum(data_mod$rating=="TP",na.rm = T)+sum(data_mod$rating=="FN",na.rm = T))
specificity<-sum(data_mod$rating=="TN",na.rm = T)/(sum(data_mod$rating=="TN",na.rm = T)+sum(data_mod$rating=="FP",na.rm = T))
return(c(sensitivity,specificity))
}
min_sig=0
max_sig=100
sig_range=seq(from=min_sig,to=max_sig,length.out=100)
sig_range=round(sig_range, 0)
sens_spec_dataset<-data.frame(matrix(nrow=(length(sig_range)),ncol=3))
sens_spec_dataset[,1]<-sig_range
colnames(sens_spec_dataset)=c("significance","sensitivity","specificity")
for (i in 1:length(sig_range)){
res<-get_spec_sens(data_mod,sig_range[i])
sens_spec_dataset[i,2]<-res[1]
sens_spec_dataset[i,3]<-res[2]
}
sens_spec_dataset$false_pos_rate<- 1 - sens_spec_dataset$specificity
g<-ggplot(data=sens_spec_dataset,aes(false_pos_rate,sensitivity))+
geom_text(label=sens_spec_dataset$significance,nudge_x = 0.05, nudge_y = 0.05, check_overlap = T)+
geom_point()+theme_bw()+ylab("True Positive Rate (specificity)")+xlab("False Positive Rate (1-sensitivity)")
g
data_mod$overall_significance<-data_mod$overall_significance*1
roc(response=data_mod$overall_significance,predictor=data_mod$monothermal_screen,na.rm=TRUE)
#I think this plot tells us that using the value of the monothermic screening is a bad idea!!!
plot.roc(data_mod$overall_significance,data_mod$monothermal_screen,na.rm=TRUE)
roc_obj <- roc(response = data_mod$overall_significance * 1, predictor = data_mod$monothermal_screen,lower=0  )
auc(roc_obj)
roc_obj <- roc(response = data_mod$overall_significance * 1, predictor = data_mod$monothermal_screen,lower=0, upper=100  )
auc(roc_obj)
plot(roc_obj)
#I think this plot tells us that using the value of the monothermic screening is a bad idea!!!
plot.roc(data_mod$overall_significance,abs(data_mod$monothermal_screen),na.rm=TRUE)
roc_obj <- roc(response = data_mod$overall_significance * 1, predictor = data_mod$monothermal_screen,lower=0, upper=100  )
auc(roc_obj)
plot(roc_obj)
#I think this plot tells us that using the value of the monothermic screening is a bad idea!!!
roc_obj<-roc(data_mod$overall_significance,abs(data_mod$monothermal_screen),na.rm=TRUE)
auc(roc_obj)
plot(roc_obj)
data(leukemia)
mytable<-SigTree(data.matrix(leukemia),mystat="all",
mymethod="ward",mymetric="euclidean",rand.fun="shuffle.column",
distrib="Rparallel",njobs=2,Ptail=TRUE,tailmethod="ML")
plot(x=mytable,mystat="fldc",siglevel=0.001,sigtype="raw",hang=-1)
mypartition<-PartitionTree(x=mytable,siglevel=0.001,statname="fldc",
sigtype="raw")
plot(x=mytable,mystat="fldc",partition=mypartition)
plot(x=mytable,mystat="fldc",partition=mypartition,print.num=F)
#with user-defined functions
mydist<-function(x,y){return(dist(x)/y)}
myrand<-function(x,z){return(apply(x+z,2,sample))}
mytable<-SigTree(data.matrix(leukemia),mystat="fldc",
mymethod="ward",mymetric="mydist",rand.fun="myrand",
distrib="Rparallel",njobs=2,Ptail=TRUE,tailmethod="MOM",metric.args=list(3),
rand.args=list(2))
plot(mytable,metric.args=list(3))
plot(mytable,metric.args=list(3),cex.leaf=1.5)
data
require(ggplot2)
require(pROC)
col_names<-read.csv("../Data/data.csv",header=FALSE)
data_raw<-read.csv("../Data/data.csv", skip = 4)
colnames(data_raw)<-col_names[2,]
data_raw[data_raw == 0] <- NA
data_raw<-data_raw[1:799,1:5]
data_mod<-data_raw
data_mod$monothermal_screen<-NA
selW<-which(data_mod$Order=="W")
selC<-which(data_mod$Order=="C")
data_mod$sum_lefts<-data_mod$WL+data_mod$CL
data_mod$sum_rights<-data_mod$WR+data_mod$CR
data_mod$sum_warms<-data_mod$WL+data_mod$WR
data_mod$sum_cools<-data_mod$CL+data_mod$CR
data_mod$diff_warms<-data_mod$WR-data_mod$WL
data_mod$diff_cools<-data_mod$CR-data_mod$CL
data_mod$sum_all<-data_mod$CL+data_mod$CR+data_mod$WL+data_mod$WR
data_mod$canal_paresis<-((data_mod$sum_rights-data_mod$sum_lefts)/data_mod$sum_all)*100
data_mod$WRandCL<-data_mod$WR+data_mod$CL
data_mod$WLandCR<-data_mod$WL+data_mod$CR
data_mod$directional_proponderance<-((data_mod$WRandCL-data_mod$WLandCR)/data_mod$sum_all)*100
data_mod[selW,"monothermal_screen"]<-(data_mod[selW,"diff_warms"]/data_mod[selW,"sum_warms"])*100
data_mod[selC,"monothermal_screen"]<-(data_mod[selC,"diff_cools"]/data_mod[selC,"sum_cools"])*100
data_mod$CP_significance<-abs(data_mod$canal_paresis)>20
data_mod$DP_significance<-abs(data_mod$directional_proponderance)>20
data_mod$overall_significance<-data_mod$CP_significance | data_mod$DP_significance
data_mod$rating<-NA
data_mod$mono_significance<-NA
get_spec_sens<-function(data_mod,significance){
data_mod$mono_significance<-abs(data_mod$monothermal_screen)>significance
data_mod[which(data_mod$overall_significance&data_mod$mono_significance),"rating"]<-"TP"
data_mod[which(!data_mod$overall_significance&data_mod$mono_significance),"rating"]<-"FP"
data_mod[which(data_mod$overall_significance&!data_mod$mono_significance),"rating"]<-"FN"
data_mod[which(!data_mod$overall_significance&!data_mod$mono_significance),"rating"]<-"TN"
sensitivity<-sum(data_mod$rating=="TP",na.rm = T)/(sum(data_mod$rating=="TP",na.rm = T)+sum(data_mod$rating=="FN",na.rm = T))
specificity<-sum(data_mod$rating=="TN",na.rm = T)/(sum(data_mod$rating=="TN",na.rm = T)+sum(data_mod$rating=="FP",na.rm = T))
return(c(sensitivity,specificity))
}
min_sig=0
max_sig=100
sig_range=seq(from=min_sig,to=max_sig,length.out=100)
sig_range=round(sig_range, 0)
sens_spec_dataset<-data.frame(matrix(nrow=(length(sig_range)),ncol=3))
sens_spec_dataset[,1]<-sig_range
colnames(sens_spec_dataset)=c("significance","sensitivity","specificity")
for (i in 1:length(sig_range)){
res<-get_spec_sens(data_mod,sig_range[i])
sens_spec_dataset[i,2]<-res[1]
sens_spec_dataset[i,3]<-res[2]
}
sens_spec_dataset$false_pos_rate<- 1 - sens_spec_dataset$specificity
g<-ggplot(data=sens_spec_dataset,aes(false_pos_rate,sensitivity))+
geom_text(label=sens_spec_dataset$significance,nudge_x = 0.05, nudge_y = 0.05, check_overlap = T)+
geom_point()+theme_bw()+ylab("True Positive Rate (specificity)")+xlab("False Positive Rate (1-sensitivity)")
g
data_mod$overall_significance<-data_mod$overall_significance*1
roc(response=data_mod$overall_significance,predictor=data_mod$monothermal_screen,na.rm=TRUE)
#I think this plot tells us that using the value of the monothermic screening is a bad idea!!!
roc_obj<-roc(data_mod$overall_significance,abs(data_mod$monothermal_screen),na.rm=TRUE)
auc(roc_obj)
plot(roc_obj)
data(leukemia)
mytable<-SigTree(data.matrix(leukemia),mystat="all",
mymethod="ward",mymetric="euclidean",rand.fun="shuffle.column",
distrib="Rparallel",njobs=2,Ptail=TRUE,tailmethod="ML")
plot(x=mytable,mystat="fldc",siglevel=0.001,sigtype="raw",hang=-1)
mypartition<-PartitionTree(x=mytable,siglevel=0.001,statname="fldc",
sigtype="raw")
plot(x=mytable,mystat="fldc",partition=mypartition)
plot(x=mytable,mystat="fldc",partition=mypartition,print.num=F)
#with user-defined functions
mydist<-function(x,y){return(dist(x)/y)}
myrand<-function(x,z){return(apply(x+z,2,sample))}
mytable<-SigTree(data.matrix(leukemia),mystat="fldc",
mymethod="ward",mymetric="mydist",rand.fun="myrand",
distrib="Rparallel",njobs=2,Ptail=TRUE,tailmethod="MOM",metric.args=list(3),
rand.args=list(2))
plot(mytable,metric.args=list(3))
plot(mytable,metric.args=list(3),cex.leaf=1.5)
data(leukemia)
data("aSAH")
#I think this plot tells us that using the value of the monothermic screening is a bad idea!!!
roc_obj<-roc(data_mod$overall_significance,abs(data_mod$monothermal_screen),na.rm=TRUE,show.thres=TRUE)
auc(roc_obj)
plot(roc_obj)
plot(roc_obj, show.thres=TRUE)
#I think this plot tells us that using the value of the monothermic screening is a bad idea!!!
roc_obj<-roc(data_mod$overall_significance,abs(data_mod$monothermal_screen),na.rm=TRUE,plot=TRUE, auc.polygon=TRUE, max.auc.polygon=TRUE, grid=TRUE,
print.auc=TRUE, show.thres=TRUE)
data(aSAH)
## Build a ROC object and compute the AUC ##
roc1 <- roc(aSAH$outcome, aSAH$s100b)
print(roc1)
# With a formula
roc(outcome ~ s100b, aSAH)
# With pipes, dplyr-style:
# }
# NOT RUN {
library(dplyr)
aSAH %>% roc(outcome, s100b)
# }
# NOT RUN {
# Create a few more curves for the next examples
roc2 <- roc(aSAH$outcome, aSAH$wfns)
roc3 <- roc(aSAH$outcome, aSAH$ndka)
## AUC ##
auc(roc1, partial.auc = c(1, .9))
## Smooth ROC curve ##
smooth(roc1)
## Summary statistics
var(roc1)
cov(roc1, roc3)
## Plot the curve ##
plot(roc1)
#  More plotting options, CI and plotting
# with all-in-one syntax:
roc4 <- roc(aSAH$outcome,
aSAH$s100b, percent=TRUE,
# arguments for auc
partial.auc=c(100, 90), partial.auc.correct=TRUE,
partial.auc.focus="sens",
# arguments for ci
ci=TRUE, boot.n=100, ci.alpha=0.9, stratified=FALSE,
# arguments for plot
plot=TRUE, auc.polygon=TRUE, max.auc.polygon=TRUE, grid=TRUE,
print.auc=TRUE, show.thres=TRUE)
require(ggplot2)
require(pROC)
col_names<-read.csv("../Data/data.csv",header=FALSE)
data_raw<-read.csv("../Data/data.csv", skip = 4)
colnames(data_raw)<-col_names[2,]
data_raw[data_raw == 0] <- NA
data_raw<-data_raw[1:799,1:5]
data_mod<-data_raw
data_mod$monothermal_screen<-NA
selW<-which(data_mod$Order=="W")
selC<-which(data_mod$Order=="C")
data_mod$sum_lefts<-data_mod$WL+data_mod$CL
data_mod$sum_rights<-data_mod$WR+data_mod$CR
data_mod$sum_warms<-data_mod$WL+data_mod$WR
data_mod$sum_cools<-data_mod$CL+data_mod$CR
data_mod$diff_warms<-data_mod$WR-data_mod$WL
data_mod$diff_cools<-data_mod$CR-data_mod$CL
data_mod$sum_all<-data_mod$CL+data_mod$CR+data_mod$WL+data_mod$WR
data_mod$canal_paresis<-((data_mod$sum_rights-data_mod$sum_lefts)/data_mod$sum_all)*100
data_mod$WRandCL<-data_mod$WR+data_mod$CL
data_mod$WLandCR<-data_mod$WL+data_mod$CR
data_mod$directional_proponderance<-((data_mod$WRandCL-data_mod$WLandCR)/data_mod$sum_all)*100
data_mod[selW,"monothermal_screen"]<-(data_mod[selW,"diff_warms"]/data_mod[selW,"sum_warms"])*100
data_mod[selC,"monothermal_screen"]<-(data_mod[selC,"diff_cools"]/data_mod[selC,"sum_cools"])*100
data_mod$CP_significance<-abs(data_mod$canal_paresis)>20
data_mod$DP_significance<-abs(data_mod$directional_proponderance)>20
data_mod$overall_significance<-data_mod$CP_significance | data_mod$DP_significance
data_mod$rating<-NA
data_mod$mono_significance<-NA
get_spec_sens<-function(data_mod,significance){
data_mod$mono_significance<-abs(data_mod$monothermal_screen)>significance
data_mod[which(data_mod$overall_significance&data_mod$mono_significance),"rating"]<-"TP"
data_mod[which(!data_mod$overall_significance&data_mod$mono_significance),"rating"]<-"FP"
data_mod[which(data_mod$overall_significance&!data_mod$mono_significance),"rating"]<-"FN"
data_mod[which(!data_mod$overall_significance&!data_mod$mono_significance),"rating"]<-"TN"
sensitivity<-sum(data_mod$rating=="TP",na.rm = T)/(sum(data_mod$rating=="TP",na.rm = T)+sum(data_mod$rating=="FN",na.rm = T))
specificity<-sum(data_mod$rating=="TN",na.rm = T)/(sum(data_mod$rating=="TN",na.rm = T)+sum(data_mod$rating=="FP",na.rm = T))
return(c(sensitivity,specificity))
}
min_sig=0
max_sig=100
sig_range=seq(from=min_sig,to=max_sig,length.out=100)
sig_range=round(sig_range, 0)
sens_spec_dataset<-data.frame(matrix(nrow=(length(sig_range)),ncol=3))
sens_spec_dataset[,1]<-sig_range
colnames(sens_spec_dataset)=c("significance","sensitivity","specificity")
for (i in 1:length(sig_range)){
res<-get_spec_sens(data_mod,sig_range[i])
sens_spec_dataset[i,2]<-res[1]
sens_spec_dataset[i,3]<-res[2]
}
sens_spec_dataset$false_pos_rate<- 1 - sens_spec_dataset$specificity
g<-ggplot(data=sens_spec_dataset,aes(false_pos_rate,sensitivity))+
geom_text(label=sens_spec_dataset$significance,nudge_x = 0.05, nudge_y = 0.05, check_overlap = T)+
geom_point()+theme_bw()+ylab("True Positive Rate (specificity)")+xlab("False Positive Rate (1-sensitivity)")
g
data_mod$overall_significance<-data_mod$overall_significance*1
roc(response=data_mod$overall_significance,predictor=data_mod$monothermal_screen,na.rm=TRUE)
#I think this plot tells us that using the value of the monothermic screening is a bad idea!!!
roc_obj<-roc(data_mod$overall_significance,abs(data_mod$monothermal_screen),na.rm=TRUE)
auc(roc_obj)
plot(roc_obj)
data_mod$overall_significance<-data_mod$overall_significance*1
roc(response=data_mod$overall_significance,predictor=data_mod$monothermal_screen,na.rm=TRUE)
g
plot(roc_obj)
require(ggplot2)
require(pROC)
col_names<-read.csv("../Data/data.csv",header=FALSE)
data_raw<-read.csv("../Data/data.csv", skip = 4)
colnames(data_raw)<-col_names[2,]
data_raw[data_raw == 0] <- NA
data_raw<-data_raw[1:799,1:5]
data_mod<-data_raw
data_mod$monothermal_screen<-NA
selW<-which(data_mod$Order=="W")
selC<-which(data_mod$Order=="C")
data_mod$sum_lefts<-data_mod$WL+data_mod$CL
data_mod$sum_rights<-data_mod$WR+data_mod$CR
data_mod$sum_warms<-data_mod$WL+data_mod$WR
data_mod$sum_cools<-data_mod$CL+data_mod$CR
data_mod$diff_warms<-data_mod$WR-data_mod$WL
data_mod$diff_cools<-data_mod$CR-data_mod$CL
data_mod$sum_all<-data_mod$CL+data_mod$CR+data_mod$WL+data_mod$WR
data_mod$canal_paresis<-((data_mod$sum_rights-data_mod$sum_lefts)/data_mod$sum_all)*100
data_mod$WRandCL<-data_mod$WR+data_mod$CL
data_mod$WLandCR<-data_mod$WL+data_mod$CR
data_mod$directional_proponderance<-((data_mod$WRandCL-data_mod$WLandCR)/data_mod$sum_all)*100
data_mod[selW,"monothermal_screen"]<-(data_mod[selW,"diff_warms"]/data_mod[selW,"sum_warms"])*100
data_mod[selC,"monothermal_screen"]<-(data_mod[selC,"diff_cools"]/data_mod[selC,"sum_cools"])*100
data_mod$CP_significance<-abs(data_mod$canal_paresis)>20
data_mod$DP_significance<-abs(data_mod$directional_proponderance)>20
data_mod$overall_significance<-data_mod$CP_significance | data_mod$DP_significance
data_mod$rating<-NA
data_mod$mono_significance<-NA
get_spec_sens<-function(data_mod,significance){
data_mod$mono_significance<-abs(data_mod$monothermal_screen)>significance
data_mod[which(data_mod$overall_significance&data_mod$mono_significance),"rating"]<-"TP"
data_mod[which(!data_mod$overall_significance&data_mod$mono_significance),"rating"]<-"FP"
data_mod[which(data_mod$overall_significance&!data_mod$mono_significance),"rating"]<-"FN"
data_mod[which(!data_mod$overall_significance&!data_mod$mono_significance),"rating"]<-"TN"
sensitivity<-sum(data_mod$rating=="TP",na.rm = T)/(sum(data_mod$rating=="TP",na.rm = T)+sum(data_mod$rating=="FN",na.rm = T))
specificity<-sum(data_mod$rating=="TN",na.rm = T)/(sum(data_mod$rating=="TN",na.rm = T)+sum(data_mod$rating=="FP",na.rm = T))
return(c(sensitivity,specificity))
}
min_sig=0
max_sig=100
sig_range=seq(from=min_sig,to=max_sig,length.out=100)
sig_range=round(sig_range, 0)
sens_spec_dataset<-data.frame(matrix(nrow=(length(sig_range)),ncol=3))
sens_spec_dataset[,1]<-sig_range
colnames(sens_spec_dataset)=c("significance","sensitivity","specificity")
for (i in 1:length(sig_range)){
res<-get_spec_sens(data_mod,sig_range[i])
sens_spec_dataset[i,2]<-res[1]
sens_spec_dataset[i,3]<-res[2]
}
sens_spec_dataset$false_pos_rate<- 1 - sens_spec_dataset$specificity
g<-ggplot(data=sens_spec_dataset,aes(false_pos_rate,sensitivity))+
geom_text(label=sens_spec_dataset$significance,nudge_x = 0.05, nudge_y = 0.05, check_overlap = T)+
geom_point()+theme_bw()+ylab("True Positive Rate (specificity)")+xlab("False Positive Rate (1-sensitivity)")
g
data_mod$overall_significance<-data_mod$overall_significance*1
roc(response=data_mod$overall_significance,predictor=data_mod$monothermal_screen,na.rm=TRUE)
#I think this plot tells us that using the value of the monothermic screening is a bad idea!!!
roc_obj<-roc(data_mod$overall_significance,abs(data_mod$monothermal_screen),na.rm=TRUE)
auc(roc_obj)
plot(roc_obj)
View(sens_spec_dataset)
View(sens_spec_dataset)
which(data_mod$overall_significanc
e)
which(data_mod$overall_significance)
View(data_raw)
View(data_raw)
View(data_mod)
View(data_mod)
require(ggplot2)
require(pROC)
col_names<-read.csv("../Data/data.csv",header=FALSE)
data_raw<-read.csv("../Data/data.csv", skip = 4)
colnames(data_raw)<-col_names[2,]
data_raw[data_raw == 0] <- NA
data_raw<-data_raw[1:799,1:5]
data_mod<-data_raw
data_mod$monothermal_screen<-NA
selW<-which(data_mod$Order=="W")
selC<-which(data_mod$Order=="C")
data_mod$sum_lefts<-data_mod$WL+data_mod$CL
data_mod$sum_rights<-data_mod$WR+data_mod$CR
data_mod$sum_warms<-data_mod$WL+data_mod$WR
data_mod$sum_cools<-data_mod$CL+data_mod$CR
data_mod$diff_warms<-data_mod$WR-data_mod$WL
data_mod$diff_cools<-data_mod$CR-data_mod$CL
data_mod$sum_all<-data_mod$CL+data_mod$CR+data_mod$WL+data_mod$WR
data_mod$canal_paresis<-((data_mod$sum_rights-data_mod$sum_lefts)/data_mod$sum_all)*100
data_mod$WRandCL<-data_mod$WR+data_mod$CL
data_mod$WLandCR<-data_mod$WL+data_mod$CR
data_mod$directional_proponderance<-((data_mod$WRandCL-data_mod$WLandCR)/data_mod$sum_all)*100
data_mod[selW,"monothermal_screen"]<-(data_mod[selW,"diff_warms"]/data_mod[selW,"sum_warms"])*100
data_mod[selC,"monothermal_screen"]<-(data_mod[selC,"diff_cools"]/data_mod[selC,"sum_cools"])*100
data_mod$CP_significance<-abs(data_mod$canal_paresis)>20
data_mod$DP_significance<-abs(data_mod$directional_proponderance)>20
data_mod$overall_significance<-data_mod$CP_significance | data_mod$DP_significance
data_mod$rating<-NA
data_mod$mono_significance<-NA
get_spec_sens<-function(data_mod,significance){
data_mod$mono_significance<-abs(data_mod$monothermal_screen)>significance
data_mod[which(data_mod$overall_significance&data_mod$mono_significance),"rating"]<-"TP"
data_mod[which(!data_mod$overall_significance&data_mod$mono_significance),"rating"]<-"FP"
data_mod[which(data_mod$overall_significance&!data_mod$mono_significance),"rating"]<-"FN"
data_mod[which(!data_mod$overall_significance&!data_mod$mono_significance),"rating"]<-"TN"
sensitivity<-sum(data_mod$rating=="TP",na.rm = T)/(sum(data_mod$rating=="TP",na.rm = T)+sum(data_mod$rating=="FN",na.rm = T))
specificity<-sum(data_mod$rating=="TN",na.rm = T)/(sum(data_mod$rating=="TN",na.rm = T)+sum(data_mod$rating=="FP",na.rm = T))
return(c(sensitivity,specificity))
}
min_sig=0
max_sig=100
sig_range=seq(from=min_sig,to=max_sig,length.out=100)
sig_range=round(sig_range, 0)
sens_spec_dataset<-data.frame(matrix(nrow=(length(sig_range)),ncol=3))
sens_spec_dataset[,1]<-sig_range
colnames(sens_spec_dataset)=c("significance","sensitivity","specificity")
for (i in 1:length(sig_range)){
res<-get_spec_sens(data_mod,sig_range[i])
sens_spec_dataset[i,2]<-res[1]
sens_spec_dataset[i,3]<-res[2]
}
sens_spec_dataset$false_pos_rate<- 1 - sens_spec_dataset$specificity
g<-ggplot(data=sens_spec_dataset,aes(false_pos_rate,sensitivity))+
geom_text(label=sens_spec_dataset$significance,nudge_x = 0.05, nudge_y = 0.05, check_overlap = T)+
geom_point()+theme_bw()+ylab("True Positive Rate (specificity)")+xlab("False Positive Rate (1-sensitivity)")
g
data_mod$overall_significance<-data_mod$overall_significance*1
roc(response=data_mod$overall_significance,predictor=data_mod$monothermal_screen,na.rm=TRUE)
#I think this plot tells us that using the value of the monothermic screening is a bad idea!!!
roc_obj<-roc(data_mod$overall_significance,abs(data_mod$monothermal_screen),na.rm=TRUE)
auc(roc_obj)
plot(roc_obj)
g
